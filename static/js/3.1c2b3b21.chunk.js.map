{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","assets/images/samurai-08.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","DialogsItem","props","className","classes","testdialogs","active","to","id","name","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","src","photos","large","avatar","alt","style","width","Preloader","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","profilePage","posts","map","p","message","key","styles","reviews","reviews_inner_wrapper","reviewsItems","addPost","newPostText","MyPostsContainer","connect","state","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.1c2b3b21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__evSf9\",\"dialogsItems\":\"Dialogs_dialogsItems__3NMXc\",\"active\":\"Dialogs_active__3K2pn\",\"messages\":\"Dialogs_messages__3LoGq\"};","import React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n    return (\r\n        <div className={classes.testdialogs + ' ' + classes.active}>\r\n            <NavLink to={'/testdialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogsItem; ","module.exports = __webpack_public_path__ + \"static/media/samurai-08.d7e22ac2.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"MyPosts_reviews__1K5bp\",\"reviews_inner_wrapper\":\"MyPosts_reviews_inner_wrapper__3wKob\",\"reviewsItems\":\"MyPosts_reviewsItems__1FRrM\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '----------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deActivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport avatar from './../../../assets/images/samurai-08.jpg';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    } else {\r\n        return (\r\n            <div>\r\n                <img src={!profile || !profile.photos.large ? avatar : profile.photos.large}\r\n                     alt=\"\" style={{width: 30 + '%'}}/>\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport DialogsItem from '../../Dialogs/DialogsItem/DialogsItem';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'}\r\n                       placeholder='Please, enter your message.'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log('render yo');\r\n\r\n    let postsElements = props.profilePage.posts.map(p => <DialogsItem name={p.message} key={p.id} id={p.id}/>);\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.reviews}>\r\n            <div className={styles.reviews_inner_wrapper}>\r\n                <div className={styles.reviewsItems}>\r\n                    {postsElements}\r\n                </div>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import {addPostCreator} from '../../../redux/profileReducer';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserStatus, getUserProfile, updateStatus} from '../../redux/profileReducer';\r\nimport { withRouter} from 'react-router-dom';\r\n// import {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus}),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}