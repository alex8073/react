{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","className","classes","testdialogs","active","to","id","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","DialogsPage","dialogs","map","d","key","messagesElements","messages","m","styles","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,iCCD9I,8CAaeC,IATK,SAACC,GACjB,OACI,yBAAKC,UAAWC,IAAQC,YAAc,IAAMD,IAAQE,QAChD,kBAAC,IAAD,CAASC,GAAI,gBAAkBL,EAAMM,IAAKN,EAAMO,S,gGCE7CC,EANC,SAACR,GACb,OACI,yBAAKC,UAAWC,IAAQO,SAAUT,EAAMS,U,iCCA1CC,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAfQ,SAACZ,GACpB,OACI,0BAAMc,SAAUd,EAAMe,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAM,iBAC3BY,SAAU,CAACC,IAAUV,GACrBW,YAAa,iBAExB,6BACI,qDCYDC,EAtBC,SAACtB,GAEb,IAAIuB,EAAkBvB,EAAMwB,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC5B,EAAA,EAAD,CAAaQ,KAAMoB,EAAEpB,KAAMqB,IAAKD,EAAErB,GAAIA,GAAIqB,EAAErB,QACjGuB,EAAmB7B,EAAMwB,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASmB,IAAKG,EAAEzB,QAM/F,OACI,yBAAKL,UAAW+B,IAAOP,SACnB,yBAAKxB,UAAW+B,IAAOC,cAClBV,GAEL,yBAAKtB,UAAW+B,IAAOF,UACnB,6BAAMD,GACN,kBAAC,EAAD,CAAgBf,SAXR,SAACoB,GACjBlC,EAAMmC,YAAYD,EAAOE,sB,wDCR7BC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,OCcRE,sBACXC,aAdkB,SAACJ,GACnB,MAAO,CACHd,YAAac,EAAMd,gBAGF,SAACmB,GACtB,MAAO,CACHR,YAAa,SAACC,GACVO,EAASC,YAAmBR,UDNR,SAACS,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAK/C,MAAMuC,OAET,kBAACM,EAAcE,KAAK/C,OAFI,kBAAC,IAAD,CAAUK,GAAI,eAJV,GAEX2C,IAAMH,WAUtC,OAFqCH,YAAQL,EAARK,CAAoCI,KCC9DL,CAGbnB","file":"static/js/4.17b20eae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__evSf9\",\"dialogsItems\":\"Dialogs_dialogsItems__3NMXc\",\"active\":\"Dialogs_active__3K2pn\",\"messages\":\"Dialogs_messages__3LoGq\"};","import React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n    return (\r\n        <div className={classes.testdialogs + ' ' + classes.active}>\r\n            <NavLink to={'/testdialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogsItem; ","import React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message; ","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder={'Add message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.DialogsPage.dialogs.map(d => <DialogsItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = props.DialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import {sendMessageCreator} from '../../redux/dialogsReduser';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsPage: state.DialogsPage,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}