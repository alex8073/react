{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","assets/images/samurai-08.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","DialogsItem","props","className","classes","testdialogs","active","to","id","name","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","styles","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contacts","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","avatar","alt","style","width","target","files","length","initialValues","formData","then","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","component","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","profilePage","posts","p","message","reviews","reviews_inner_wrapper","reviewsItems","addPost","newPostText","MyPostsContainer","connect","state","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.e5e15c80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__evSf9\",\"dialogsItems\":\"Dialogs_dialogsItems__3NMXc\",\"active\":\"Dialogs_active__3K2pn\",\"messages\":\"Dialogs_messages__3LoGq\"};","import React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n    return (\r\n        <div className={classes.testdialogs + ' ' + classes.active}>\r\n            <NavLink to={'/testdialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogsItem; ","module.exports = __webpack_public_path__ + \"static/media/samurai-08.d7e22ac2.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"MyPosts_reviews__1K5bp\",\"reviews_inner_wrapper\":\"MyPosts_reviews_inner_wrapper__3wKob\",\"reviewsItems\":\"MyPosts_reviewsItems__1FRrM\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span onDoubleClick={activateEditMode}>{props.status || '----------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deActivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {reduxForm} from 'redux-form';\r\nimport styles from '../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        {error &&\r\n            <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>Full name: </b>{createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b>{createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills: </b>{createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me: </b>{createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b>{Object.keys(profile.contacts).map(key => {\r\n            return <div key={key}>\r\n                <b>{key}: </b>{createField(key, \"contacts.\" + key, [], Input)}\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport avatar from './../../../assets/images/samurai-08.jpg';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            ()=> {setEditMode(false)}\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <img src={!profile || !profile.photos.large ? avatar : profile.photos.large}\r\n                 alt=\"\" style={{width: 30 + '%'}}/>\r\n            {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n            {editMode\r\n                ? <ProfileDataFormReduxForm initialValues={profile}\r\n                                            profile={profile}\r\n                                            onSubmit={onSubmit}/>\r\n                : <ProfileData goToEditMode={() => {\r\n                    setEditMode(true)\r\n                }}\r\n                               profile={profile}\r\n                               isOwner={isOwner}/>}\r\n\r\n            <ProfileStatusWithHooks status={status}\r\n                                    updateStatus={updateStatus}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner &&\r\n        <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name: </b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJobDescription &&\r\n        <div>\r\n            <b>My professional skills: </b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me: </b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}: </b>{contactValue}\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport DialogsItem from '../../Dialogs/DialogsItem/DialogsItem';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'}\r\n                       placeholder='Please, enter your message.'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log('render yo');\r\n\r\n    let postsElements = props.profilePage.posts.map(p => <DialogsItem name={p.message} key={p.id} id={p.id}/>);\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.reviews}>\r\n            <div className={styles.reviews_inner_wrapper}>\r\n                <div className={styles.reviewsItems}>\r\n                    {postsElements}\r\n                </div>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import {addPostCreator} from '../../../redux/profileReducer';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         saveProfile={props.saveProfile}\r\n                         savePhoto={props.savePhoto}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from '../../redux/profileReducer';\r\nimport {withRouter} from 'react-router-dom';\r\n// import {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}